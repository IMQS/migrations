require_relative 'view-builder'

# see create-views-water.rb for an explanation of how these were built

scenarios = [["04", "Existing"], ["05", "Future"], ["02", "AsBuilt"], ["03", "Construction"], ["01", "Abandoned"]]

sewer_gravity = {
	:SewerGravity => %w(
		Locality
		ID
		FromID
		ToID
		Type
		From_Code
		To_Code
		Code
		Exists
		From_Ground_Level
		To_Ground_Level
		From_Cover_Level
		To_Cover_Level
		From_Invert_Level
		To_Invert_Level
		Diameter
		Original_Diameter
		Geom1
		Geom2
		Geom3
		Geom4
		Profile_Type
		SWMM_Model
		Roughness
		Design_Group
		Planning_Item
		Calculated_Length
		User_Length
		Length_Type
		Calculated_Slope
		User_Slope
		Slope_Type
		Infiltration
		Additional_Length
		Storm_Index
		Cost_Function
		Design_Spare_Capacity
		User_Flag
		Geometry
		Design_Min_Velocity
		MetaID
	),
	:SewerGravityMemo => %w(
		Material
		Nominal_Diameter
		Inside_Diameter
		Year
		Year_Integrity
		Special
		System_Type
		System
		Name
		Sub_Name
		Comment
		Region
		MP_Item_Type
		MP_Item_No
		MP_Project_No
		MP_Project_Description
		MP_New_Diam
		MP_Par_Diam
		MP_Design_Flow
		MP_Design_Type
		MP_Year
		MP_Comment
		MP_Cost_Detail
		MP_Cost_FN
		MP_Extra_Cost_Fact
		Future_System_Type
		Future_System
		AM_Make
		AM_Type
		AM_ID_No
		AM_Utilization
		AM_Utilization_Integrity
		AM_Base_Year
		AM_Replace_Value
		Locality_Integrity
		Material_Integrity
		Diameter_Integrity
		Slope_Integrity
		Drawing_No
		GIS_Diameter
		GIS_Gradient
		Old_GIS_ID
		Old_GIS_Int
		Sur_US_IL
		Sur_DS_IL
		Sur_Slope
		Sur_Integrity
		Cctv_Diam
		Cctv_Material
		Existing_Drainage_Area
		Future_Drainage_Area
	),
	:SewerGravityResults => %w(
		Full_Flow
		Full_Velocity
		Max_Flow
		Min_Flow
		Velocity_At_Max_Flow
		Depth_At_Max_Flow
		Velocity_At_Min_Flow
		Depth_At_Min_Flow
		Overflow
		Hydraulic_Spare_Capacity
		Absolute_Spare_Capacity
		Relative_Spare_Capacity
		Design_Flow
		Upstream_Continuous_Pump
		Time_0
		Time_1
		Time_2
		Time_3
		Time_4
		Time_5
		Time_6
		Time_7
		Time_8
		Time_9
		Time_10
		Time_11
		Time_12
		Time_13
		Time_14
		Time_15
		Time_16
		Time_17
		Time_18
		Time_19
		Time_20
		Time_21
		Time_22
		Time_23
	)
}

sewer_pump = {
	:SewerPump => %w(
		Locality
		ID
		FromID
		Code
		Exists
		Index
		LCV
		Capacity
		Original_Capacity
		Pump_Type
		Cost_Function
		Initial_Status
		On_Level
		Off_Level
		Design_Spare_Capacity
		Design_Down_Size
		x1
		y1
		x2
		y2
		x3
		y3
		x4
		y4
		x5
		y5
		x6
		y6
		x7
		y7
		x8
		y8
		x9
		y9
		x10
		y10
		MetaID
	),
	:SewerPumpMemo => %w(
		Impeller
		Speed
		Power
		Static_Head
		Pump_Flow
		Pump_Head
		PS_Oper_Standby
		Year
		Year_Integrity
		System_Type
		System
		Name
		Sub_Name
		Comment
		Region
		MP_Item_Type
		MP_Item_No
		MP_Project_No
		MP_Project_Description
		MP_Pump_Flow
		MP_Pump_Head
		MP_Design_Flow
		MP_Design_Type
		MP_Year
		MP_Comment
		MP_Cost_Detail
		MP_Cost_FN
		MP_Extra_Cost_Fact
		Future_System_Type
		Future_System
		AM_Make
		AM_Type
		AM_ID_No
		AM_Utilization
		AM_Utilization_Integrity
		AM_Base_Year
		AM_Replace_Value
		Pump_Integrity
		Flow_Integrity
		Drawing_No
		Existing_Drainage_Area
		Future_Drainage_Area
	),
	# NOTE: Removed [Design_Spare_Capacity, Design_Down_Size] from here, because they already appear in the SewerPump table
	:SewerPumpResults => %w(
		Design_Flow
		Max_Inflow
		Hydraulic_Spare_Capacity
		Absolute_Spare_Capacity
		Relative_Spare_Capacity
	)
}

sewer_rising = {
	:SewerRising => %w(
		Locality
		ID
		FromID
		ToID
		Code
		Type
		From_Code
		To_Code
		Exists
		From_Cover_Level
		To_Cover_Level
		From_Invert_Level
		To_Invert_Level
		Percentage_Flow
		Diameter
		Original_Diameter
		Roughness
		Design_Group
		Planning_Item
		Calculated_Length
		User_Length
		Length_Type
		Calculated_Slope
		User_Slope
		Slope_Type
		Infiltration
		Additional_Length
		Storm
		Cost_Function
		Design_Spare_Capacity
		User_Flag
		Geometry
		Design_Min_Velocity
		Design_Max_Velocity
		MetaID
  	),
	:SewerRisingMemo => %w(
		Material
		Pressure_Rating
		Nominal_Diameter
		Inside_Diameter
		Year
		Year_Integrity
		Special
		System_Type
		System
		Name
		Sub_Name
		Comment
		Region
		MP_Item_Type
		MP_Item_No
		MP_Project_No
		MP_Project_Description
		MP_New_Diameter
		MP_Par_Diameter
		MP_Design_Flow
		MP_Design_Type
		MP_Year
		MP_Comment
		MP_Cost_Detail
		MP_Cost_FN
		MP_Extra_Cost_Fact
		Future_System_Type
		Future_System
		AM_Make
		AM_Type
		AM_ID_No
		AM_Utilization
		AM_Utilization_Integrity
		AM_Base_Year
		AM_Replace_Value
		Locality_Integrity
		Material_Integrity
		Pressure_Integrity
		Diameter_Integrity
		Drawing_No
		GIS_Diameter
		Old_GIS_ID
		Old_GIS_Int
		Existing_Drainage_Area
		Future_Drainage_Area
  	),
	:SewerRisingResults => %w(
		Total_Lag
		Max_Inflow
		Max_Flow
		Min_Flow
		Overflow
		Min_Velocity
		Max_Velocity
		Time_0
		Time_1
		Time_2
		Time_3
		Time_4
		Time_5
		Time_6
		Time_7
		Time_8
		Time_9
		Time_10
		Time_11
		Time_12
		Time_13
		Time_14
		Time_15
		Time_16
		Time_17
		Time_18
		Time_19
		Time_20
		Time_21
		Time_22
		Time_23
  	)
}

sewer_structures = {
	:SewerStructure => %w(
		Locality
		ID
		Code
		Type
		Ground_Level
		Cover_Level
		User_Depth
		Planning_Item
		System_Area
		Depth
		Geometry
		MetaID
	),
	:SewerStructureMemo => %w(
		Material
		PS_Flow
		PS_Head
		Year
		Year_Integrity
		System_Type
		System
		Name
		Sub_Name
		Comment
		Region
		WSDP_Name
		WSDP_Receiving_Stream
		WSDP_Capacity
		WSDP_Fut_Capacity
		Catchment_PDDWF
		Future_Catchment_PDDWF
		Sump_Volume
		Future_Sump_Volume
		MP_Item_Type
		MP_Item_No
		MP_Project_No
		MP_Project_Description
		MP_PS_Flow
		MP_PS_Head
		MP_Design_Flow
		MP_Design_Type
		MP_Year
		MP_Comment
		MP_Cost_Detail
		MP_Cost_FN
		MP_Extra_Cost_Fact
		Future_System_Type
		Future_System
		Future_Develop
		Informal_Develop
		Develop_Weight
		AM_Make
		AM_Type
		AM_ID_No
		AM_Utilization
		AM_Utilization_Integrity
		AM_Base_Year
		AM_Replace_Value
		Locality_Integrity
		Material_Integrity
		Cover_Level_Integrity
		Drawing_No
	),
	:SewerStructureResults => %w(
		Min_US_Flow
		Max_US_Flow
		Peak_US_Cont_Pump
		Average_US_Cont_Pump
		Total_US_Flow_Volume
		Local_US_Flow_Volume
		Overflow
		Sim_Inflow_Volume
		Infil_Volume
		US_AADD
		Flow_Perc_AADD
		US_Continuous_Pumps
		US_Variable_Pumps
		US_Sump_Pumps
		US_Diversions
		US_Gravity_Length
		US_Rising_Length
		US_Additional_Length
		US_UH_1
		US_UH_2
		US_UH_3
		US_UH_4
		US_UH_5
		US_UH_6
		US_UH_7
		US_UH_8
		US_UH_9
		US_UH_10
		US_UH_11
		US_UH_12
		US_UH_13
		US_UH_14
		US_UH_15
		US_UH_16
		US_UH_17
		US_UH_18
		US_UH_19
		US_UH_20
		US_UserH
		Infil_Perc_Volume
		Ave_C_Pump_Perc_Volume
	)
}

options = {:has_geometry => true, :only_drop_views => (ARGV[0] == "-d")}
print(ViewBuilder.build_view_statement("SewerGravityCombined", sewer_gravity, scenarios, options))
print(ViewBuilder.build_view_statement("SewerPumpCombined", sewer_pump, scenarios, options))
print(ViewBuilder.build_view_statement("SewerRisingCombined", sewer_rising, scenarios, options))
print(ViewBuilder.build_view_statement("SewerStructureCombined", sewer_structures, scenarios, options))
